[{"path":"https://johnaclouse.github.io/featureflow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 featureflow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://johnaclouse.github.io/featureflow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Clouse. Author, maintainer.","code":""},{"path":"https://johnaclouse.github.io/featureflow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clouse J (2022). featureflow: Functions support incremental feature engineering. R package version 0.0.0.9001, https://github.com/johnaclouse/featureflow.","code":"@Manual{,   title = {featureflow: Functions to support incremental feature engineering},   author = {John Clouse},   year = {2022},   note = {R package version 0.0.0.9001},   url = {https://github.com/johnaclouse/featureflow}, }"},{"path":"https://johnaclouse.github.io/featureflow/reference/featureflow-package.html","id":null,"dir":"Reference","previous_headings":"","what":"featureflow: Functions to support incremental feature engineering — featureflow-package","title":"featureflow: Functions to support incremental feature engineering — featureflow-package","text":"collection functions help automate feature engineering pipeline. Enabling model raw data converted features steps support identifying change, intentionally unintentionally, step, performing exploratory data analysis new features, identifying introduction duplicate data, providing mechanism following test cases feature engineering process.","code":""},{"path":[]},{"path":"https://johnaclouse.github.io/featureflow/reference/featureflow-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"featureflow: Functions to support incremental feature engineering — featureflow-package","text":"Maintainer: John Clouse johnaclouse@gmail.com (ORCID)","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Hash rows or columns in a data frame — hash_df","title":"Hash rows or columns in a data frame — hash_df","text":"function hash_df accepts data frame performs MD5 along specified margin using openssl package. margin = \"rows\", original data frame return additional column labeled md5 containing row-level hash values. margin = \"columns\", column names original data frame md5 hash returned data frame.","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hash rows or columns in a data frame — hash_df","text":"","code":"hash_df(df, margin = c(\"rows\", \"columns\"))"},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hash rows or columns in a data frame — hash_df","text":"df data frame hashed. margin character value indicating margin hash calculated (rows columns).","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hash rows or columns in a data frame — hash_df","text":"dataframe two columns: name hash","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hash rows or columns in a data frame — hash_df","text":"function may used process determining columns changed data frame.","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/hash_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hash rows or columns in a data frame — hash_df","text":"","code":"hash_df(iris[1]) #> # A tibble: 150 × 2 #> # Rowwise:  #>    Sepal.Length md5                              #>    <chr>        <chr>                            #>  1 5.1          0b1988431c8b99b756e34790dc4522da #>  2 4.9          1c6b6cf74bdcf08605f2b032d9c49105 #>  3 4.7          b0f2ea0999e55a634f69471adf767da7 #>  4 4.6          74544dc17009fa1b4d5bc3040ef262f1 #>  5 5            ee340e888492be0703f2bcc9abfb390c #>  6 5.4          40ab8c9c8ce4885b6f557e0873643ecc #>  7 4.6          74544dc17009fa1b4d5bc3040ef262f1 #>  8 5            ee340e888492be0703f2bcc9abfb390c #>  9 4.4          d877ce59a29f544b5a3621d7dfdad2f7 #> 10 4.9          1c6b6cf74bdcf08605f2b032d9c49105 #> # … with 140 more rows #> # ℹ Use `print(n = ...)` to see more rows hash_df(iris) #> # A tibble: 150 × 6 #> # Rowwise:  #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species md5                 #>    <chr>        <chr>       <chr>        <chr>       <chr>   <chr>               #>  1 5.1          3.5         1.4          0.2         setosa  a8c38e2a38db5ec876… #>  2 4.9          3           1.4          0.2         setosa  23b0260532d7c04122… #>  3 4.7          3.2         1.3          0.2         setosa  2e4c52b64dd67aa963… #>  4 4.6          3.1         1.5          0.2         setosa  3282393366d46ec19b… #>  5 5            3.6         1.4          0.2         setosa  2c0593d3d66905e9fb… #>  6 5.4          3.9         1.7          0.4         setosa  5402af39b5fcdf28e3… #>  7 4.6          3.4         1.4          0.3         setosa  971ff22101798bc2f5… #>  8 5            3.4         1.5          0.2         setosa  53ddb7a21421b98a83… #>  9 4.4          2.9         1.4          0.2         setosa  e5cb67a6faef6748ee… #> 10 4.9          3.1         1.5          0.1         setosa  aeb834abb3707995dd… #> # … with 140 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://johnaclouse.github.io/featureflow/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://johnaclouse.github.io/featureflow/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://johnaclouse.github.io/featureflow/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://johnaclouse.github.io/featureflow/news/index.html","id":"featureflow-0009001","dir":"Changelog","previous_headings":"","what":"featureflow 0.0.0.9001","title":"featureflow 0.0.0.9001","text":"Initial package setup outline Added hash_df","code":""}]
